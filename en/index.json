[{"content":"My take on a speedtest widget for pfsense.\nBeing a newcomer to pfsense I guess i\u0026rsquo;m still playing catchup, as the newbie when my download speeds are nowhere near what i\u0026rsquo;m paying for I suspect pfsense as thats the only thing that changed in my setup.\nKnowing what my broadband supplier is going to say I pre-empt this by doing my own diagnosis before calling them. I\u0026rsquo;ve disconnected everything from the back of my modem and plugged my laptop in directly, gone to www.Speedtest.net and hit the \u0026lsquo;GO\u0026rsquo; button. Unfortunately the reading is no different (download speeds still suck).\nOne thing is for sure: I\u0026rsquo;ve just wasted several minutes dismantling a perfectly good hardware install, now I just have a mass of cables near my modem which need to be plugged back in.\nSurely there\u0026rsquo;s a better way to do the speedtest without having to completely dismantle my installation. After some headscratching involving search terms in Interweb\u0026rsquo;s such as pfsense and speedtest, I came across a post where someone was asking for a tool within pfsense which did the testing for you. Ok I know its not recommended by netgate themselves but hear me out. If the tool is ran from the psfense box I am emulating plugging in my laptop directly into the back of my broadband modem and hence fulfiling the requirment from my broadband supplier that the rest of the devices be disconnected from the hub/router.\nMy search led to seeking a widget that filled my requirement. I didn\u0026rsquo;t find one so i\u0026rsquo;m rolling my own.\nStep 1. How do I write a widget for pfsense ? um \u0026hellip; lets look in the pfsense guide under the section about Creating widgets,\nanyone as confused as me? coming from a hardware background what I am seeing is just programmer speak. So i\u0026rsquo;m applying a bit of artistic licensing here what I actually need is just a php file, a javascript file and an inc file.\nStep 2. What about the mechanism for measuring the speeds. Easy we can cheat here as the big Search giants are in on the act by pushing their own take on a widget that runs a test directly from the search results. We just need to borrow one we like the look off and wrap it up in our widget. The caveat here is that the utility will target a server which may not necessarily be close to you so the results will be lowered according to distance.\nHow about this for our utility ? courtesy of Microsoft looks clean enough\nURL: https://www.bing.com/widget/t/speedtest\nor this one from MLab.\nURL: https://www.measurementlab.net/p/ndt-ws.html\nMLab is a opensource provider of testing utilities (Google use this one via the API for its widget).\nStep 3. Putting it all together\nOk I lied when I said 3 files, we actually only need 2 as there is no logic so we can scrap the javascript file. No logic you say? Yep in my limited understanding, the way the widget files work is that the inc file is used to define things like the title bar text.\nThe php file is the wrapper for the widget, so in our case go grab the speedtest mechanism from Microsoft/MLab and then display it in the widget frame whilst applying boundaries to fix the viewable size of the mechanism as necessary.\nThe javascript file would be where we add the logic for any buttons or text boxes etc. we create, as we have no buttons created by us we don\u0026rsquo;t need this.\nour simplistic code is then just the 2 files, the include (.inc) file\n1 2 3 4 5 6 7 8 9 10 11 12 13  \u0026lt;?php /* File : /usr/local/www/widgets/include/SpeedTest.inc * Author : Saquib Ghani * Date : 10-03-2019 * * This software is distributed on an \u0026#34;AS IS\u0026#34; BASIS, WITHOUT WARRANTIES * OR CONDITIONS OF ANY KIND, either express or implied. * */ $SpeedTest_title = gettext(\u0026#34;Speed Test\u0026#34;); ?\u0026gt;   and the widget (.php) file\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  \u0026lt;?php /* File : /usr/local/www/widgets/widgets/SpeedTest.widget.php * Author : Saquib Ghani * Date : 10-03-2019 * * This software is distributed on an \u0026#34;AS IS\u0026#34; BASIS, WITHOUT WARRANTIES * OR CONDITIONS OF ANY KIND, either express or implied. * * URL Choices : https://www.bing.com/widget/t/speedtest * https://www.measurementlab.net/p/ndt-ws.html * */ require_once(\u0026#34;guiconfig.inc\u0026#34;); ?\u0026gt; \u0026lt;iframe src=\u0026#34;Substitute the URL for the widget you want to use here.\u0026#34; width=\u0026#34;498\u0026#34; height=\u0026#34;500\u0026#34; frameborder=\u0026#34;0\u0026#34; \u0026gt; \u0026lt;/iframe\u0026gt;   to install this widget login to your pfsense router and navigate to Diagnostics-\u0026gt;Edit File-\u0026gt;Browse\nnavigate to /usr/local/www/widgets/include\nAt the end of the navigation file path add /SpeedTest.inc and press the save button to create a blank file within the .inc file location\nto refresh the view once the file is created just hit the browse button again\nClick the file name you just created and it should open it up in an editable state. Now just copy the code from above for the .inc file remembering to substitue the URL for the speedtest widget you want and save the changes by clicking the Save button\nClick Browse once the file has been saved and this will take you back to the contents of the include folder.\nNow navigate to /usr/local/www/widgets/widgets and create a blank file here call it SpeedTest.widget.php\nJust as before click this new file and copy the code from above for the Widget (php) and paste it into the new file before saving it.\nThat\u0026rsquo;s all now we just need to return to our main dashboard page in psfense and add our widget\nclick the [+] And select our widget name\nhere we have it a SpeedTest widget which we can use graphically from within the pfsense dashboard\nand the Alternate one using the MLab test\nSince writing this post my Speed has returned to a more normal level hence the screen grab\u0026rsquo;s showing closer to the 200Mbs. After all this though I do now have a widget which i can use without having to unplug everything from the back of the modem.    Expand me  Some Markdown Contents   ","description":"","id":0,"section":"post","tags":["speed-test","pfsense"],"title":"SpeedTestWidget","uri":"https://Some-Useful.info/en/post/speedtestwidget/"},{"content":" A single application solution for when Postman is one application too many.\n Due to the way Azure is delivered for the developer community at my place of work, all Internet facing systems need to be fronted by a Content Delivery Network.\nTo ensure this rule is followed a scan is carried out to find any Public IP\u0026rsquo;s. Any public IP\u0026rsquo;s found which did not follow any form of exception process are passed on to the security team, where a suitable enforcer is dispatched to help the guilty party remediate the situation.\nTo enable me to do the requisite scan I just needed to make a rest call to the developer\u0026rsquo;s subscription, pulling back any public IP\u0026rsquo;s which may be present and the related resource(s). The requisite rest call was :\n1  GET https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPAddresses?api-version=2019-09-01  The only downside was I needed to set values for my clientID, AppID and Client Secret. All of which would be in plain text and at risk of leaking to the big bad world if I didn\u0026rsquo;t secure them.\nThere are several places on the Internet where experts have given their respective take of how to secure this important credential set. Yes I could put them in something like Hashicorp\u0026rsquo;s vault but i\u0026rsquo;d still need a credential of sort\u0026rsquo;s to pull the information out at the time of consumption within the script\nWhile looking for information on securing the credential set I came across a blog post by Geert. Geert is found over at Mobilefirstcloudfirst.net, in his blog he highlight\u0026rsquo;s using the same Rest client for Visual Studio Code that i\u0026rsquo;m using. Alas Geert still had the credential set in plain text as part of the Rest client\u0026rsquo;s environment variables.\nAs I spend most of the day in VS Code, this piqued my interest. I have my VSCode setup so that I\u0026rsquo;m already connected to the Azure tenant using the \u0026lsquo;Azure Account\u0026rsquo; plugin and i can also use \u0026lsquo;az\u0026rsquo; commands against the subscription using the Azure CLI tools. I just need the script to point to the relevant subscription and pull back my report.\nMy plan was to use what I had available to me, namely I was already authenticated to Azure so just needed a valid access/bearer token. My script then became one of calling Azure and grabbing the access/bearer token and pushing it out to the VSCode Settings.json file.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  \u0026lt;# Script Author : Saquib Ghani Script Name : Get-Token.ps1 Script Date : 20-01-2020 Script Purpose : Get my Access/Bearer token from Azure and push it into the VSCode session environment variables. #\u0026gt; $pathToSettingsFile = \u0026#34;C:\\Users\\Saquib\\AppData\\Roaming\\Code\\User\\settings.json\u0026#34; Write-Host \u0026#34;Getting Access Token from Azure\u0026#34; $Token = az account get-access-token | ConvertFrom-Json Write-Host $Token.accessToken $settingsFile = Get-Content -path $pathToSettingsFile | ConvertFrom-Json $settingsFile.\u0026#39;rest-client.environmentVariables\u0026#39;.local.token = $Token.accessToken $settingsFile | ConvertTo-Json -depth 32| set-content -path $pathToSettingsFile Write-Host \u0026#34;Access Token Stored\u0026#34; Exit   Like many colleagues I prefer the ability to click a button to do something, this can be achieved with a task within VSCode. To create a task is simply a matter of creating a file in the .vscode folder called \u0026lsquo;tasks.json\u0026rsquo; with the following contents :\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  { \u0026#34;version\u0026#34;: \u0026#34;2.0.0\u0026#34;, \u0026#34;tasks\u0026#34;: [ { \u0026#34;label\u0026#34;: \u0026#34;Get-Bearer\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;process\u0026#34;, \u0026#34;windows\u0026#34;: { \u0026#34;command\u0026#34;: \u0026#34;powershell\u0026#34;, \u0026#34;args\u0026#34;: [ \u0026#34;-ExecutionPolicy\u0026#34;, \u0026#34;Unrestricted\u0026#34;, \u0026#34;-NoProfile\u0026#34;, \u0026#34;-File\u0026#34;, \u0026#34;${cwd}/.vscode/Get-Token.ps1\u0026#34; ], }, \u0026#34;linux\u0026#34;: { // no linux command structure needed unless you are on a Linux machine. In which case // the windows code should run as long as you are running powershell core. }, \u0026#34;presentation\u0026#34;: { \u0026#34;reveal\u0026#34;: \u0026#34;always\u0026#34;, \u0026#34;panel\u0026#34;: \u0026#34;new\u0026#34; } } ] }   then to get the button in the task bar we leverage the tasks plugin by actboy168. Once this is installed you should see Get-Bearer appear in the task bar ( as highlighted by the yellow box in the following graphic )\nwhich when clicked upon will grab the access/bearer token and put it into the settings.json file of vscode.\nFrom here you can consume it as you wish.\nTo close the loop: using the Rest Client with what we have built so far to get that public IP that should not exist ( and the resource to which it is attached if any as shown on line 23 in the response )\nThere you have it, ensure you are signed into Azure, click the \u0026lsquo;Get Bearer\u0026rsquo; button ( highlighted in red below )\nWithin the script click \u0026lsquo;Send Request\u0026rsquo; ( highligted in yellow )\nFinally we get a response showing the Public IP(s) within the target Subscription.\n","description":"","id":1,"section":"post","tags":["Rest-Client","VS-Code","Azure"],"title":"Rest Client in VS Code","uri":"https://Some-Useful.info/en/post/rest-client-in-vscode/"},{"content":"This is contact page.\n","description":"Contact page","id":2,"section":"","tags":null,"title":"Contact","uri":"https://Some-Useful.info/en/contact/"},{"content":"Currently, I work for a large UK based retailer as part of the Cloud Platform Engineering team. Previous roles had me pegged as the SME for infrastructure, the fountain of knowledge when it came to fulfilment centers and the go to guy to get automation in place when it came to moving infrastructure from one Datacenter to another (twice! - No we didn\u0026rsquo;t have issues, we just outgrew the colo site at the first datacenter, then the second move was a DR and active-active implementation). Where possible we\u0026rsquo;ve used virtualisation including both XenServer and more recently VMWare to return the levels of consolidation we need.\nMy current role is one of learning Azure and the DevOPS side of thing\u0026rsquo;s with the aspiration that at somepoint before retirement i can be called a cloud Architect with the certification\u0026rsquo;s to back it up.\nWhy the blog?\nIf i don\u0026rsquo;t write it down i\u0026rsquo;ll forget it, in the past i\u0026rsquo;ve just added it to my Microsoft OneNote then shared the pages with colleagues. Then someone mentioned that i had Some Useful Info and it may worthwile sharing what i have with a wider audience.\nI\u0026rsquo;m not a technical writer so everything i write is as simplistic as can be and hopefully easy to follow when it is an instrcutional guide. A previous manager of mine once said that the prefect document is one which can be given to the least technical person anywhere within your business, if that person can follow your instructions and deploy the same exact solution as you then you have achieved your goal. The guides and information are my own thought\u0026rsquo;s idea\u0026rsquo;s etc. with copious amounts of googling so you don\u0026rsquo;t have to do it, hopefully you as the reader find something useful in what i have done and documented.\nEnjoy!\n","description":"Who Am I?","id":3,"section":"","tags":null,"title":"About","uri":"https://Some-Useful.info/en/about/"}]